package ${packageName};

import ${domainPackage}.${entityName};
import ${dtoPackage}.${entityName}DTO;
import org.mapstruct.*;
import java.util.List;
import java.util.Set;
<#if additionalImports?? && additionalImports != "">
${additionalImports}
</#if>

/**
 * Mapper for the entity {@link ${entityName}} and its DTO {@link ${entityName}DTO}.
 */
<#if usesMappers?has_content>
@Mapper(componentModel = "spring", uses = {${usesMappers?join(", ")}})
<#else>
@Mapper(componentModel = "spring")
</#if>
public interface ${mapperName} {

<#if mappings?has_content>
    ${mappings?join("\n    ")}
</#if>
    ${entityName}DTO toDto(${entityName} entity);

    List<${entityName}DTO> toDto(List<${entityName}> entityList);

    Set<${entityName}DTO> toDto(Set<${entityName}> entityList);

<#if mappings?has_content>
    ${mappings?join("\n    ")}
</#if>
    ${entityName} toEntity(${entityName}DTO entityDTO);

    List<${entityName}> toEntity(List<${entityName}DTO> dtoList);

    Set<${entityName}> toEntity(Set<${entityName}DTO> dtoList);

    /**
     * Partial update method
     */
    @BeanMapping(nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
    void partialUpdate(@MappingTarget ${entityName} entity, ${entityName}DTO dto);

<#if customMethods?? && customMethods != "">
    ${customMethods}
</#if>
}
