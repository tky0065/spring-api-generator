package ${packageName!"${basePackage}.entity"}

import jakarta.persistence.*
import java.time.LocalDateTime
<#if imports??>
${imports}
</#if>

/**
 * User entity for authentication and authorization.
 *
 * Generated on ${currentDate?datetime!"now"} by Spring API Generator Plugin.
 */
@Entity
@Table(name = "users")
data class ${className!"User"}(
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    val id: Long? = null,

    @Column(unique = true, nullable = false, length = 50)
    val username: String = "",

    @Column(nullable = false, length = 255)
    val password: String = "",

    @Column(nullable = false, unique = true, length = 100)
    val email: String = "",

    @Column(nullable = false, length = 100)
    val fullName: String = "",

    @Column(nullable = false)
    val enabled: Boolean = true,

    @Column(nullable = false)
    val accountNonExpired: Boolean = true,

    @Column(nullable = false)
    val accountNonLocked: Boolean = true,

    @Column(nullable = false)
    val credentialsNonExpired: Boolean = true,

    @Enumerated(EnumType.STRING)
    @Column(nullable = false, length = 20)
    val role: Role = Role.USER,

    @Column(nullable = false)
    val createdAt: LocalDateTime = LocalDateTime.now(),

    @Column(nullable = false)
    val updatedAt: LocalDateTime = LocalDateTime.now()
) {
    /**
     * User roles enumeration.
     */
    enum class Role {
        USER, ADMIN, MODERATOR
    }

<#if customMethods?? && customMethods != "">
${customMethods}
</#if>
}
