package ${packageName!"${basePackage}.config"}

import io.swagger.v3.oas.models.OpenAPI
import io.swagger.v3.oas.models.info.Info
import io.swagger.v3.oas.models.info.Contact
import io.swagger.v3.oas.models.info.License
import io.swagger.v3.oas.models.servers.Server
import org.springframework.context.annotation.Bean
import org.springframework.context.annotation.Configuration
<#if imports??>
${imports}
</#if>

/**
 * OpenAPI configuration for ${entityName!"Entity"} API (Kotlin version).
 * Generated by Spring API Generator.
 */
@Configuration
class ${className!"OpenApiConfig"} {

    @Bean
    fun customOpenAPI(): OpenAPI {
        return OpenAPI()
            .info(
                Info()
                    .title("${apiTitle!"API Documentation"}")
                    .description("${apiDescription!"API documentation for entity management"}")
                    .version("${apiVersion!"1.0.0"}")
                    .contact(
                        Contact()
                            .name("${contactName!"API Support"}")
                            .email("${contactEmail!"support@example.com"}")
                            .url("${contactUrl!"https://example.com/support"}")
                    )
                    .license(
                        License()
                            .name("${licenseName!"Apache 2.0"}")
                            .url("${licenseUrl!"https://www.apache.org/licenses/LICENSE-2.0"}")
                    )
                    .termsOfService("${apiTermsOfService!"https://example.com/terms"}")
            )
            .addServersItem(
                Server()
                    .url("http://localhost:8080")
                    .description("Development server")
            )
            .addServersItem(
                Server()
                    .url("https://api.example.com")
                    .description("Production server")
            )
    }

<#if customMethods?? && customMethods != "">
${customMethods}
</#if>
}
