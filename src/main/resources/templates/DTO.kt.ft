package ${packageName}

import java.io.Serializable
<#if additionalImports?? && additionalImports != "">
${additionalImports}
</#if>

/**
 * A DTO for the ${entityName} entity.
 */
data class ${dtoName}(
<#if dtoFields?? && dtoFields?trim != "">
${dtoFields?trim}
<#elseif fields?? && (fields?size > 0)>
<#list fields as field>
    <#if !field.nullable>
    @field:NotNull
    <#if field.type?contains("String")>
    @field:NotBlank
    </#if>
    <#if field.name?lower_case?contains("email")>
    @field:Email
    </#if>
    </#if>
    val ${field.name}: <#if field.relationType.name() == "NONE">${field.simpleTypeName}<#else>${field.relationTargetSimpleName!"Unknown"}DTO</#if><#if field.nullable>? = null</#if><#if field_has_next>,</#if>
</#list>
<#else>
    // Fallback: ID field only
    val id: ${idType}? = null
</#if>
) : Serializable {

    companion object {
        private const val serialVersionUID = 1L
    }

<#if customMethods?? && customMethods != "">
${customMethods}
</#if>
}
